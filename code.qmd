---
title: "STA 210 - Final Project"
author: "Zakk Heile & Julia Healey-Parera"
format: pdf
---

```{r}


library(tidyverse)
library(broom)
library(glm2)
library(dplyr)
library(Stat2Data)
library(pROC)
library(yardstick)
library(ggplot2)
library(janitor)
library(here)
library(fs)
library(withr)
library(lmtest)

#edu <- read.csv("data/english_education.csv")
edu <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-23/english_education.csv')



working_dir <- here::here("data")

xls_path <- withr::local_tempfile(fileext = ".xlsx")
download.file(
  "https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/educationandchildcare/datasets/educationalattainmentofyoungpeopleinenglishtownsdata/200708201819/youngpeoplesattainmentintownsreferencetable1.xlsx",
  xls_path,
  mode = "wb"
)

english_education <- readxl::read_xlsx(xls_path, sheet = "Data", na = "*") |> 
  janitor::clean_names()

readr::write_csv(
  english_education,
  fs::path(working_dir, "english_education.csv"))
```

```{r}


#transforming to log odds
#english_education <- english_education %>%
#  mutate(log_odds_ks4asy = log(key_stage_4_attainment_school_year_2012_to_2013 / (1 #- key_stage_4_attainment_school_year_2012_to_2013)))

#m1 <- lm(education_score ~ population_2011, data = english_education)

#summary(m1)

#m1 <- lm(education_score ~  factor(size_flag), data = english_education)

#summary(m1)

#better option - population_2011
#m1 <- lm(education_score ~  factor(size_flag)+factor(university_flag)+factor###(job_density_flag)+highest_level_qualification_achieved_b_age_22_average_score+factor(rgn11nm), data = english_education)
#summary(m1)

#english_education <- na.omit(english_education) #complete case analysis for all variables, even those we aren't using. We want R's default complete case analysis, only for those variables we are working with.

m1 <- lm(education_score ~  population_2011 + highest_level_qualification_achieved_b_age_22_average_score+ level_3_at_age_18	+ activity_at_age_19_employment_with_earnings_above_10_000 + key_stage_4_attainment_school_year_2012_to_2013		, data = english_education)
summary(m1)


ggplot(m1, aes(x = .fitted, y = .resid)) + 
  geom_point() + 
  geom_hline(yintercept = 0, color = "darkred") + 
  labs(x = "Fitted (predicted) value", y = "Residual") + 
  theme_bw()


m1_aug <- augment(m1)



ggplot(m1, aes(sample = .resid)) +
  stat_qq() + 
  stat_qq_line() + 
  theme_bw() + 
  labs(x = "Theoretical quantiles", 
       y = "Sample quantiles")


quantiles <- quantile(m1_aug$.fitted, probs = seq(0, 1, by = 0.1))

variance_intervals_df <- data.frame(interval = character(0), variance = numeric(0))

for (i in 1:(length(quantiles) - 1)) {
  subset_data <- m1_aug %>%
    filter(.fitted >= quantiles[i] & .fitted < quantiles[i + 1])
  
  interval_name <- paste(round(quantiles[i], 2), "-", round(quantiles[i + 1], 2), sep="")
  variance_value <- var(subset_data$.resid)
  
  variance_intervals_df <- rbind(variance_intervals_df, 
                           data.frame(interval=interval_name,
                           variance=variance_value))
}

print(variance_intervals_df)

bptest_result <- bptest(m1)

print(bptest_result)

resid_mean <- mean(m1_aug$.resid, na.rm = TRUE)
resid_sd <- sd(m1_aug$.resid, na.rm = TRUE)

ggplot(m1_aug, aes(x = .resid)) + 
  geom_histogram(aes(y = ..density..), 
                 fill = "deepskyblue", color = "darkblue", bins = 30) + 
  stat_function(fun = dnorm, 
                args = list(mean = resid_mean, sd = resid_sd),
                color = "darkred", lwd = 2) +
  labs(x = "Residual", y = "Density") + 
  theme_bw()

#m2 <- lm(education_score ~ highest_level_qualification_achieved_b_age_22_average_score, data = english_education)

#summary(m2)
#transforming back
#predicted_log_odds <- predict(m1, type = "response")
#predicted_proportions <- exp(predicted_log_odds) / (1 + exp(predicted_log_odds))
```

```{r}
#library(nnet)
#m2 <- multinom(rgn11nm ~ education_score +  population_2011+highest_level_qualification_achieved_b_age_22_average_score+ level_3_at_age_18	+ activity_at_age_19_employment_with_earnings_above_10_000 + key_stage_4_attainment_school_year_2012_to_2013, data = english_education)
#summary(m2)

```

```{r}
min_max_education_score <- english_education %>%
  summarise(min_education_score = min(education_score, na.rm = TRUE),
            max_education_score = max(education_score, na.rm = TRUE))

min_max_population_2011 <- english_education %>%
  summarise(min_population_2011 = min(population_2011, na.rm = TRUE),
            max_population_2011 = max(population_2011, na.rm = TRUE))

min_max_highest_qualification <- english_education %>%
  summarise(min_highest_qualification = min(highest_level_qualification_achieved_b_age_22_average_score, na.rm = TRUE),
            max_highest_qualification = max(highest_level_qualification_achieved_b_age_22_average_score, na.rm = TRUE))

min_max_level_3_age_18 <- english_education %>%
  summarise(min_level_3_age_18 = min(level_3_at_age_18, na.rm = TRUE),
            max_level_3_age_18 = max(level_3_at_age_18, na.rm = TRUE))

min_max_activity_age_19 <- english_education %>%
  summarise(min_activity_age_19 = min(activity_at_age_19_employment_with_earnings_above_10_000, na.rm = TRUE),
            max_activity_age_19 = max(activity_at_age_19_employment_with_earnings_above_10_000, na.rm = TRUE))

min_max_key_stage_4 <- english_education %>%
  summarise(min_key_stage_4 = min(key_stage_4_attainment_school_year_2012_to_2013, na.rm = TRUE),
            max_key_stage_4 = max(key_stage_4_attainment_school_year_2012_to_2013, na.rm = TRUE))

min_max_df <- bind_rows(
  min_max_education_score,
  min_max_population_2011,
  min_max_highest_qualification,
  min_max_level_3_age_18,
  min_max_activity_age_19,
  min_max_key_stage_4
)

print(min_max_df)
```
